<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean name="appProperties"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>default.properties</value>
        </property>
    </bean>

    <!-- Hikari CP -->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="poolName" value="springHikariCP" />
        <property name="connectionTestQuery" value="SELECT 1" />
        <property name="dataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />
        <property name="dataSourceProperties">
            <props>
                <prop key="url">${jdbc.url}</prop>
                <prop key="user">${jdbc.username}</prop>
                <prop key="password">${jdbc.password}</prop>
            </props>
        </property>
        <property name="minimumIdle" value="1"/>
        <property name="maximumPoolSize" value="3"/>
        <property name="connectionTimeout" value="1000"/>
    </bean>

    <bean id="hikariDatasource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg ref="hikariConfig" />
    </bean>

    <!-- FlexyPool -->
    <bean id="configurationBuilder" class="com.vladmihalcea.flexypool.config.Configuration$Builder">
        <constructor-arg value="uniqueId"/>
        <constructor-arg ref="hikariDatasource"/>
        <constructor-arg value="#{ T(com.vladmihalcea.flexypool.adaptor.HikariCPPoolAdapter).FACTORY }"/>
    </bean>

    <bean id="basedataSource" class="com.vladmihalcea.flexypool.FlexyPoolDataSource" init-method="start" destroy-method="stop">
        <constructor-arg ref="configuration"/>
        <constructor-arg>
            <list>
                <bean class="com.vladmihalcea.flexypool.strategy.IncrementPoolOnTimeoutConnectionAcquiringStrategy.Factory">
                    <constructor-arg value="5"/>
                </bean>
                <bean class="com.vladmihalcea.flexypool.strategy.RetryConnectionAcquiringStrategy.Factory">
                    <constructor-arg value="2"/>
                </bean>
            </list>
        </constructor-arg>

    </bean>

    <bean id="configuration" factory-bean="configurationBuilder" factory-method="build"/>

    <bean id="dataSource" class="net.ttddyy.dsproxy.support.ProxyDataSource">
        <property name="dataSource" ref="basedataSource"/>
        <property name="listener" ref="listener"/>
    </bean>

    <!--<bean id="listener" class="net.ttddyy.dsproxy.listener.logging.CommonsQueryLoggingListener">-->
        <!--<property name="logLevel" value="INFO"/>       &lt;!&ndash; Default: DEBUG &ndash;&gt;-->
    <!--</bean>-->

    <!-- For multiple listeners -->
    <bean id="listener" class="net.ttddyy.dsproxy.listener.ChainListener">
      <property name="listeners">
        <list>
          <!--<bean class="net.ttddyy.dsproxy.listener.logging.CommonsQueryLoggingListener"/>-->
          <!--<bean class="net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener"/>-->
          <!--<bean class="net.ttddyy.dsproxy.listener.logging.SystemOutQueryLoggingListener"/>-->
          <!--<bean class="net.ttddyy.dsproxy.listener.DataSourceQueryCountListener"/>-->
        </list>
      </property>
    </bean>

    <!--<bean id="basedataSource"-->
          <!--class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
        <!--<property name="driverClassName" value="${jdbc.driverClassName}"/>-->
        <!--<property name="url" value="${jdbc.url}"/>-->
        <!--<property name="username" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
    <!--</bean>-->

    <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="txManager"/>
</beans>